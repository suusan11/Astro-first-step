---
import Layout from '../../layouts/Layout.astro';
import PrevNext from '../../components/PrevNext.astro';
import { sortDate } from "../../js/sortDate.js";

const metas = {
	discription: "CMS„ÅÆ„Éö„Éº„Ç∏üçì",
	dir: '/news/',
    path: '../'
}

export async function getStaticPaths() {
    // ÊúÄÂàù„ÅÆ100‰ª∂ÂèñÂæó
    const res = await fetch(`${import.meta.env.PUBLIC_API_URL}posts?per_page=100`);
    let posts = await res.json();
    const total = Number(res.headers.get('x-wp-totalpages'));
    const postsLength = posts.length;

    // 101‰ª∂ÁõÆ‰ª•Èôç„Åå„ÅÇ„Çå„Å∞ÂèñÂæó
    if(total > 1) {
        for(let i = 2; i <= total; i++) {
            const res = await fetch(`${import.meta.env.PUBLIC_API_URL}posts?per_page=100&page=${i}`);
            const morePosts = await res.json();
            posts = posts.concat(morePosts);
        }
    }
    return posts.sort(sortDate).map((post:any, i)=>{
        return {
            params: { slug: decodeURI(post.slug) },
            props: {
                post: post,
                prevPost: i === 0 ? { slug: "" } : posts[i - 1],
                nextPost: i + 1 === postsLength ? { slug: "" } : posts[i + 1],
            },
        }
    });
}

interface Props {
    post: {
        slug: string,
        content: {
            rendered: string;
        },
        date: string,
        title: {
            rendered: string;
        },
        thumbnail: {
            url: string;
        }
    }
    prevPost: {
        slug: string,
    },
    nextPost: {
        slug: string,
    },
}

// ÂêÑ„Éö„Éº„Ç∏„Åß‰Ωø„ÅÜ„Éá„Éº„Çø
const { slug } = Astro.params;
const { post, prevPost, nextPost } = Astro.props;
const renderedTitle = post.title.rendered;
const renderedContent = post.content.rendered;
const thumbnailUrl = post.thumbnail.url;
const date_data = new Date(post.date);
const year = date_data.getFullYear();
const month = date_data.getMonth() + 1;
const day = date_data.getDate();
const date = `${year}/${month}/${day}`;
---
<Layout title={renderedTitle} description={metas.discription}, dir={metas.dir}, path={metas.path}, menuBgBlue={false}>
    <section class="l-second-page l-bg-blue">
        <div class="l-container">
            <article class="news">
                <p class="date" set:html={date} />
                <p class="title" set:html={renderedTitle} />
                <p class="thumbnail"><img src={thumbnailUrl} alt={renderedTitle} /></p>
                <div class="content">
                    <Fragment set:html={renderedContent} />
                </div>
            </article>
            <PrevNext
                prevPostSlug={prevPost.slug},
                nextPostSlug={nextPost.slug},
                parentPage="news"
            />
        </div>
    </section>
</Layout>

<style lang="scss">
    @use "../../scss/foundation/rem" as r;

    .news {
        display: block;
        background-color: var(--color-white);
        border: 2px solid var(--color-black);
        border-radius: 10px;
        text-align: left;
        padding: 2rem 1.5rem;
        margin: 2rem auto;
        .date {
            font-size: r.f-rem(12);
            line-height: 1;
        }
        .title {
            font-size: r.f-rem(16);
            font-weight: 500;
            margin-bottom: 1rem;
        }
        .thumbnail {
            width: 100%;
            overflow: hidden;
            margin-bottom: 2rem;
            img {
                aspect-ratio: 16/9;
            }
        }
        .content {
            p {
                font-size: r.f-rem(16);
                font-weight: 300;
                text-align: justify;
            }
        }
    }
</style>